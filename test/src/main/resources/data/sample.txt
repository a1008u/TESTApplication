Q:このコードを、コンパイル及び実行するとどのような結果になるか。<br /><br />package b; <br /><br />public class Q2 { <br />&nbsp public static void main(String[] args) { <br />&nbsp &nbsp int i = 5;<br /> &nbsp &nbsp while(i >= 0 ) { <br /> &nbsp &nbsp &nbsp System.out.println((i--) + \" \"); <br /> &nbsp &nbsp } <br /> &nbsp }
Q:コンパイルに成功し、「aaabbb」と出力されるようにするには、<br />[1]の部分にどの修飾子を指定すればいいか。<br /><br />public static void main(String[] args) { <br />&nbsp &nbsp String str = \"aaa\"; <br />&nbsp &nbsp str = foo(str); <br />&nbsp &nbsp  System.out.println(str); <br />&nbsp  } <br /><br />&nbsp  /*[1]*/ String foo(Sting s) { <br />&nbsp&nbsp return s + 　\"bbb\"; <br />&nbsp&nbsp} <br />&nbsp<br />
Q:プログラムが正常にコンパイルされるようにするには、<br /> どのコードをSportsインタフェースに挿入すればいいですか。(2つ選択してください)<br /><br />interface Sports{<br /> &nbsp // insert code here<br /> }<br /><br />&nbsp A)String name;<br /> &nbsp B)private void setScore(int score);<br /> &nbsp C)void addPlayer(String name);<br /> &nbsp D)Public static void setCaptain(String name);<br /> &nbsp E)public String getScore();<br />
Q:このコードを、コンパイル及び実行するとどのような結果になるか。<br /><br />public class Q4{<br /> &nbsp public static void main(String[] args) {<br /> &nbsp&nbsp for (int i=0; ; i++) {<br />&nbsp&nbsp&nbsp int j = 1;<br />&nbsp&nbsp&nbsp while (j <= 5) {<br />&nbsp&nbsp&nbsp&nbsp System.out.println(j++);<br />&nbsp&nbsp&nbsp}<br />&nbsp&nbsp}<br />&nbsp}<br />
Q:privateキーワードで修飾できるものはどれか。(3つ選択してください)<br /><br />　&nbsp a)クラスのコンストラクタ<br />&nbsp b)インタフェースのメソッド<br />&nbsp c)クラスの抽象メソッド<br />&nbsp d)クラスの具象(コンクリート)メソッド<br />&nbsp e)インタフェースの変数<br />&nbsp f)クラスの変数<br />
Q:クラスの宣言として有効なものはどれですか。(3つ選択してください)<br /><br />　&nbsp a)public class MyObject{ }<br />&nbsp b)class MyObject extends Java.lang.Object{ }<br />&nbsp c)public class MyObject extends Java.lang.*{ }<br />&nbsp d)final class MyObject{ }<br />&nbsp e)public class MyObject implements Object{ }<br />
Q:コンパイルを成功させるには、【ここにコードを挿入】の部分に追加すればいいか。<br /><br />public class Fruit2{<br />  &nbsp public static void main(String[] args) {<br />  &nbsp&nbsp String[] sa = {\"apple\",\"orange\",\"banana\",};<br />  &nbsp&nbsp 【ここにコードを挿入】<br />  &nbsp&nbsp&nbsp System.out.println(s);<br />  &nbsp&nbsp}<br />
Q:整数配列の宣言として有効なものはどれですか。(3つ選択してください) <br /><br />&nbsp a)int[&nbsp] arr1 = {10,20,30,40};<br />  &nbsp b)int arr2 = new int[3];<br />  &nbsp c)int[&nbsp] arr = new int[3];<br />  &nbsp d)int[&nbsp] arr = null;<br />  &nbsp&nbsp&nbsp&nbsp arr = new int[3];<br />  &nbsp e)int[&nbsp] arr = new int(3);<br />  &nbsp f)int[&nbsp] arr = new int()[3];<br />  &nbsp g)int arr[3];<br />
Q:変数を適切にカプセル化し、値が変更されないようにするには、クラスでどのように宣言しますか。
Q:このコードに関して正しいものはどれか。<br /><br />public class Limits{<br /> &nbsp public static void main(String[] args) {<br /> &nbsp&nbsp byte b = -100;        //A<br /> &nbsp&nbsp short s = 70000;     //B<br /> &nbsp&nbsp int i = -10000000;  //C<br /> &nbsp&nbsp long L = 123456789L;  //D<br /> &nbsp }<br />
Q:このコードをコンパイル及び、実行するとどのような結果になるか。<br /><br />public class Cars{<br /> &nbsp public static void main(String[] args) {<br /> &nbsp&nbsp Cars[] c = {new Cars(), new Cars(), new Cars()};//A <br /> &nbsp&nbsp int x = c.length;<br /> &nbsp&nbsp do while(x > 0) { //B<br /> &nbsp&nbsp&nbsp System.out.print(x-- + \" \");<br /> &nbsp&nbsp }<br /> &nbsp}<br /> }
Q:このコードをコンパイル及び、実行するとどのような結果になるか。<br /><br />public class Statics{<br /> &nbsp private static int i;<br /> &nbsp private int j;<br /> <br /> &nbsp public static int counter() {<br /> &nbsp&nbsp return ++i;<br /> &nbsp }<br /> &nbsp public int instance() {<br /> &nbsp&nbsp return counter();<br /> &nbsp }<br /> <br /> &nbsp public static void main(String[] args) {<br /> &nbsp&nbsp Statics svm = new Statics();<br /> &nbsp&nbsp System.out.println(svm.instance());//A<br /> &nbsp&nbsp System.out.println(svm.instance() + \" \");//B<br /> &nbsp }<br /> }<br />
Q:このコードをコンパイル及び、実行するとどのような結果になるか。<br /><br />public class ArrayCopy{<br /> &nbsp public static void main(String[] args) {<br /> &nbsp&nbsp char[] arr1 = new char[7];<br /> &nbsp&nbsp arr1[0]=\"J\";<br /> &nbsp&nbsp arr1[1]=\"a\";<br /> &nbsp&nbsp arr1[2]=\"v\";<br /> &nbsp&nbsp arr1[3]=\"a\";<br /> <br /> &nbsp&nbsp char[] arr2 = {\"P\",\"l\",\"a\",\"t\",\"f\",\"o\",\"r\",\"m\"};<br /> &nbsp&nbsp arr1 = arr2;<br /> <br /> &nbsp&nbsp System.out.println(arr1);<br /> &nbsp }<br /> }<br />
Q:このコードをコンパイル及び、実行するとどのような結果になるか。<br /><br />public class While{<br /> &nbsp public static void main(String[] args) {<br /> &nbsp&nbsp int i=4;<br /> &nbsp&nbsp while(i++ < 6) {<br /> &nbsp&nbsp&nbsp System.out.println(\"true\");<br /> &nbsp&nbsp }<br /> &nbsp&nbsp i++;<br /> &nbsp }<br /> }<br />
Q:abstractとして宣言できるのは、どのJavaの構成要素ですか。(３つ選択してください)<br /><br />a)クラス<br /> b)変数<br /> c)メソッド<br /> d)パッケージ<br /> e)インタフェース<br />
Q:このコードをコンパイル及び、実行するとどのような結果になるか。<br /><br />public class Dipper{<br /> &nbsp public static void main(String[] args) {<br /> &nbsp&nbsp int x = 2;<br /> &nbsp&nbsp Dipper d = new Dipper();<br /> &nbsp&nbsp d.go(7);<br /> &nbsp }<br /> &nbsp void go (int y) {<br /> &nbsp&nbsp System.out.println( x-- * y );<br /> &nbsp }<br /> }<br />
Q:このコードをコンパイル及び、実行するとどのような結果になるか。<br /><br />public class Test{<br /> &nbsp public static void main(String[] args) {<br /> &nbsp&nbsp int i = 2;<br /> &nbsp&nbsp int j = i++;<br /> &nbsp&nbsp int z = ++j;<br /> &nbsp&nbsp System.out.println(i+\" :\" +j+\" :\" +z);<br /> &nbsp}<br /> }<br />
Q:このコードをコンパイル及び、実行するとどのような結果になるか。<br /><br />public class Bees{<br /> &nbsp public static void main(String[] args) {<br /> &nbsp&nbsp int bees = 7;<br /> &nbsp&nbsp int count = (bees = 3) + bees;<br /> &nbsp&nbsp System.out.println( count + \"  \"  +bees );<br /> &nbsp}<br /> }<br />
Q:Javaのソース・ファイルに関して正しい記述はどれですか。(３つ選択してください)<br /><br />　&nbsp a)ソース・ファイルの名前は、public宣言されたクラスの名前と一致する必要がある。<br />&nbsp b)各ソース・ファイルでは、import文を1つだけ指定できる。<br /> &nbsp c)各ソース・ファイルでは、finalクラスを1つだけ指定できる。<br /> &nbsp d)package文はオプションであり、使用する場合はソース・ファイルの1行目に記述する必要がある。<br /> &nbsp e)Javaのソース・ファイルには、クラスとインタフェースの両方の宣言を含めることできる。<br /> &nbsp f)import文は、ソース・ファイル内のどの場所でも定義できる。<br />
Q:このコードをコンパイル及び、実行するとどのような結果になるか。<br /><br />public class Forfor{<br /> &nbsp public static void main(String[] args) {<br /> &nbsp&nbsp for (int i =0; i<10 ; i++) {<br /> &nbsp&nbsp&nbsp for (i=5; i<10 ; i++) {<br /> &nbsp&nbsp&nbsp&nbsp System.out.println(i);<br /> &nbsp&nbsp&nbsp }<br /> &nbsp&nbsp }<br /> &nbsp}<br /> }<br />
Q:「insert code here」にどのコードを入れれば、コンパイルと実行が正常に行われでしょうか<br /><br />public class App{<br /> &nbsp private String lang, edition;<br /> &nbsp private String flavor = \" SE\" ;<br /> <br /> &nbsp App() {<br /> &nbsp&nbsp //insert code here<br /> &nbsp }<br /> <br /> &nbsp App(String edition) {<br /> &nbsp&nbsp this.edition = edition;<br /> &nbsp }<br /> <br /> &nbsp public void info() {<br /> &nbsp&nbsp System.out.print(lang + \" :\"  + edition);<br /> &nbsp }<br /> <br /> &nbsp public static void main(String[] args) {<br /> &nbsp&nbsp App obj = new App();<br /> &nbsp&nbsp obj.info();<br /> &nbsp }<br /> }<br />
Q:コードが正常にコンパイルされ、fiction,nonfictionが出力されるようにするには、insert code hereの部分に何を挿入すればいいですか。<br /><br />class Book{<br /> &nbsp String category = \" nonfiction\" ;<br /> }<br /> <br /> public class Literature extends Book{<br /> &nbsp String category = \" fiction\" ;<br /> <br /> &nbsp public void displayCategories() {<br /> &nbsp&nbsp System.out.print(category + \" ,\"  + /* insert code here */);<br /> &nbsp }<br /> <br /> &nbsp public static void main (String[] args) {<br /> &nbsp&nbsp Literature obj = new Literature();<br /> &nbsp&nbsp obj.displayCategories();<br /> &nbsp }<br /> }<br />
Q:このコードをコンパイル及び、実行するとどのような結果になるか。<br /><br />class Base{<br /> &nbsp public void disp() {<br /> &nbsp&nbsp System.out.println(\" Base\" );<br /> &nbsp }<br /> }<br /> <br /> class Sub extends Base{<br /> &nbsp public void disp() {<br /> &nbsp&nbsp System.out.print(\" Sub\" );<br /> &nbsp }<br /> }<br /> <br /> public class Test{<br /> &nbsp public static void main (String[] args) {<br /> &nbsp&nbsp Base b = new Sub();<br /> &nbsp&nbsp b.disp();<br /> &nbsp }<br /> }<br />
Q:ポリモフィズムともとも関連が深いのはどれですか。
Q:Javaにおける継承に関して正しい記述はどれですか(2つ選択してください)<br /><br />a)1つのサブクラスで複数のスーパークラスを継承できる。<br /> b)1つのスーパークラスは複数のサブクラスを持つことができる。<br /> c)サブクラスはスーパークラスのメンバーをすべて継承する。<br /> d)サブクラスをさらに継承できる。<br />
Q:このコードをコンパイル及び、実行するとどのような結果になるか。<br /><br />public class Base {<br /> &nbsp public static void main (String[] args) {<br /> &nbsp&nbsp for(int x = 0; ++x<5;)<br /> &nbsp&nbsp&nbsp System.out.print(x + \"  \" );<br /> &nbsp }<br /> }<br />
Q:このコードをコンパイルして「java MethodTest data」というコマンドを実行すると、どのような結果になります。<br /><br />class MethodTest{<br /> &nbsp public static void main (String[] args) {<br /> &nbsp&nbsp System.out.println(args[0] + \" is received.\" );<br /> &nbsp }<br /> }<br />
Q:このコードをコンパイル及び、実行するとどのような結果になるか。interface Fruit{<br /><br /> &nbsp int getSeeds();<br /> }<br /> <br /> class Apple implements Fruit{<br /> &nbsp public int getSeeds() {<br /> &nbsp&nbsp return 5;<br /> &nbsp }<br /> }<br /> <br /> class Orange{<br /> &nbsp public int getSeeds() {<br /> &nbsp&nbsp return 16;<br /> &nbsp }<br /> }<br /> <br /> public class ExtractSeeds{<br />&nbsp public static void main (String[] args) {<br />&nbsp&nbsp Fruit[] hopper = {new Apple(), new Orange(), new Apple()};<br />&nbsp&nbsp for(int i=0; i < hopper.length; i++) {<br />&nbsp&nbsp&nbsp System.out.print(hopper[i].getSeeds()); //A<br />&nbsp&nbsp }<br />&nbsp }<br />}
Q:このアプリケーションを作成するには、どのJavaテクノロジを使用しますか。<br /><br />ABC病院は、メニュー形式の使いやすいモジュールを使用して病院関連の情報を保存、更新及び取得できる、GUIベースのアプリケーションの開発を希望しています。このアプリケーションの主要なユーザーは、事務員です。 将来的な拡張として、Webベースのシステムに移行しようと考えています。
Q:オーバーロードされたメソッドがあるクラスの宣言として、最も適切なものはどれですか。